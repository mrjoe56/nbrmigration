<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from nbrmigration/xml/schema/CRM/Nbrmigration/NbrConsentLink.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:e907627262c1e4cd5bb0b628ebb7033a)
 */

/**
 * Database access object for the NbrConsentLink entity.
 */
class CRM_Nbrmigration_DAO_NbrConsentLink extends CRM_Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_nbr_consent_link';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique NbrConsentLink ID
   *
   * @var int
   */
  public $id;

  /**
   * Particpant ID
   *
   * @var string
   */
  public $cih_type_participant_id;

  /**
   * Pack ID
   *
   * @var string
   */
  public $cih_type_packid;

  /**
   * Pack ID
   *
   * @var string
   */
  public $consent_version;

  /**
   * Pack ID
   *
   * @var string
   */
  public $consent_date;

  /**
   * Panel
   *
   * @var string
   */
  public $panel;

  /**
   * Site
   *
   * @var string
   */
  public $site;

  /**
   * Centre
   *
   * @var string
   */
  public $centre;

  /**
   * Processed
   *
   * @var bool
   */
  public $processed;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_nbr_consent_link';
    parent::__construct();
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Unique NbrConsentLink ID'),
          'required' => TRUE,
          'where' => 'civicrm_nbr_consent_link.id',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
        ],
        'cih_type_participant_id' => [
          'name' => 'cih_type_participant_id',
          'type' => CRM_Utils_Type::T_STRING,
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Particpant ID'),
          'maxlength' => 32,
          'size' => CRM_Utils_Type::MEDIUM,
          'where' => 'civicrm_nbr_consent_link.cih_type_participant_id',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
        'cih_type_packid' => [
          'name' => 'cih_type_packid',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nbrmigration_ExtensionUtil::ts('Cih Type Packid'),
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Pack ID'),
          'maxlength' => 32,
          'size' => CRM_Utils_Type::MEDIUM,
          'where' => 'civicrm_nbr_consent_link.cih_type_packid',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
        'consent_version' => [
          'name' => 'consent_version',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nbrmigration_ExtensionUtil::ts('Consent Version'),
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Pack ID'),
          'maxlength' => 128,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'civicrm_nbr_consent_link.consent_version',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
        'consent_date' => [
          'name' => 'consent_date',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nbrmigration_ExtensionUtil::ts('Consent Date'),
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Pack ID'),
          'maxlength' => 10,
          'size' => CRM_Utils_Type::TWELVE,
          'where' => 'civicrm_nbr_consent_link.consent_date',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
        'panel' => [
          'name' => 'panel',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nbrmigration_ExtensionUtil::ts('Panel'),
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Panel'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'where' => 'civicrm_nbr_consent_link.panel',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
        'site' => [
          'name' => 'site',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nbrmigration_ExtensionUtil::ts('Site'),
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Site'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'where' => 'civicrm_nbr_consent_link.site',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
        'centre' => [
          'name' => 'centre',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => CRM_Nbrmigration_ExtensionUtil::ts('Centre'),
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Centre'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'where' => 'civicrm_nbr_consent_link.centre',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
        'processed' => [
          'name' => 'processed',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => CRM_Nbrmigration_ExtensionUtil::ts('Processed'),
          'description' => CRM_Nbrmigration_ExtensionUtil::ts('Processed'),
          'where' => 'civicrm_nbr_consent_link.processed',
          'default' => 'FALSE',
          'table_name' => 'civicrm_nbr_consent_link',
          'entity' => 'NbrConsentLink',
          'bao' => 'CRM_Nbrmigration_DAO_NbrConsentLink',
          'localizable' => 0,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'nbr_consent_link', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'nbr_consent_link', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
